version: "3.4"

services:
    # mysql:
    #     build: mysql
    #     restart: always
    #     container_name: "mysql"
    #     domainname: siffra.local
    #     hostname: mysql
    #     privileged: true
    #     environment: 
    #         - MYSQL_ROOT_PASSWORD=123456
    #     ports:
    #         - "3307:3306"
    #     volumes:
    #         - mysql-data:/var/lib/mysql
    #     networks: 
    #         - laravel

    mariadb:
        build: mariadb
        restart: always
        container_name: "mariadb"
        domainname: siffra.local
        hostname: mariadb
        privileged: true
        environment: 
            - MYSQL_ROOT_PASSWORD=123456
        ports:
            - "3306:3306"
        volumes:
            - mariadb-data:/var/lib/mariadb
        networks: 
            - laravel

    postgres:
        build: postgres
        restart: always
        container_name: "postgres"
        domainname: siffra.local
        hostname: postgres
        privileged: true
        environment: 
            # - POSTGRES_USER=laravel
            - POSTGRES_PASSWD=123456
        ports:
            - "5432:5432"
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - "./postgres/backup:/backup"
        networks: 
            - laravel

    redis:
        build: redis
        restart: always
        container_name: "redis"
        domainname: siffra.local
        hostname: redis
        privileged: true
        ports:
            - "6379:6379"
        volumes:
            - redis-data:/data
        networks: 
            - laravel
            
    pgadmin:
        build: pgadmin
        restart: always
        container_name: "pgadmin"
        domainname: siffra.local
        hostname: pgadmin
        privileged: true
        environment: 
            - PGADMIN_DEFAULT_EMAIL=luiz@siffra.com.br
            - PGADMIN_DEFAULT_PASSWORD=123
        ports: 
            - "8080:80"
        volumes: 
            - pgadmin-data:/var/lib/pgadmin
            - "./postgres/backup:/backup"
            - "./postgres/backup:/var/lib/pgadmin/storage/luiz/"
        depends_on: 
            - postgres
        networks: 
            - laravel

    metabase:
        build: metabase
        restart: always
        container_name: metabase
        domainname: siffra.local
        hostname: metabase
        privileged: true
        environment: 
            - MB_DB_TYPE=postgres
            - MB_DB_DBNAME=metabase
            - MB_DB_PORT=5432
            - MB_DB_USER=metabase
            - MB_DB_PASS=metabase@1
            - MB_DB_HOST=postgres
        ports:
            - "3000:3000"
        volumes:
            - metabase-data:/metabase-data
        depends_on: 
            - postgres
        networks: 
            - laravel

    phpmyadmin:
        build: phpmyadmin
        restart: always
        container_name: phpmyadmin
        domainname: siffra.local
        environment:
            - PMA_ARBITRARY=0
            - PMA_HOST=mariadb
            - PMA_USER=root
            - PMA_PASSWORD=123456
            - MYSQL_ROOT_PASSWORD=123456
        restart: always
        ports:
            - 8081:80
        volumes:
            - phpmyadmin-data:/sessions
        networks: 
            - laravel
            
    adminer:
        build: adminer
        restart: always
        container_name: adminer
        domainname: siffra.local
        restart: always
        ports:
            - 8082:8080
        networks: 
            - laravel
            
    portainer:
        build: portainer
        restart: always
        container_name: "portainer"
        domainname: siffra.local
        #Automatically choose 'Manage the Docker instance where Portainer is running' by adding <--host=unix:///var/run/docker.sock> to the command
        command: --host=unix:///var/run/docker.sock --no-auth
        ports: 
            - "9000:9000"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - portainer-data:/data
        networks: 
            - laravel
    
    mailhog:
        image: mailhog/mailhog
        restart: always
        container_name: "mailhog"
        domainname: siffra.local
        ports: 
            - 1025:1025
            - 8025:8025
        networks: 
            - laravel
    # watchtower:
    #     build: watchtower
    #     container_name: "watchtower"
    #     domainname: siffra.local
    #     command: --interval 30 --cleanup --debug
    #     volumes:
    #     - /var/run/docker.sock:/var/run/docker.sock
    #     - ~/.docker/config.json:/config.json

volumes:
    redis-data:
    postgres-data:
    mysql-data:
    mariadb-data:
    pgadmin-data:
    phpmyadmin-data:
    portainer-data:
    adminer-data:
    metabase-data:

networks: 
    laravel:
        driver: bridge